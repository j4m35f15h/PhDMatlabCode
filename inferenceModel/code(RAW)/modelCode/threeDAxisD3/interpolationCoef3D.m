function [w] = interpolationCoef3D(theta,X)
%INTERPOLATIONCOEF - returns a line of w for a single point.
%W has 4 elements for each of the points. it is a definition of the
%relative position between the center of the square and lattice point. dx
%and dy must be calculated each time and represent the distance betwwen the
%lattice point and the center of the region.

%As inputs, let's assume that we have the 4 lattice coordinates, as well as
%the point of interest, X
% w = sym('W',[1 4]);
w = zeros(1,6);
C = zeros(1,3);
C(1) = sum(theta(1:8))/8;
C(2) = sum(theta(9:16))/8;
C(3) = sum(theta(17:24))/8;
 
% for i = 1:4
%     w(i) = .25*(1+ (X(1) - C(1))/abs((theta(i) - C(1))) )*...
%                (1+ (X(2) - C(2))/abs((theta(4+i) - C(2))) );
% end

w(5) = .125*(1- (X(1) - C(1)) / abs((theta(5) - C(1))) )*...
        (1- (X(2) - C(2)) / abs((theta(8+5) - C(2))) )*...
        (1+ (X(3) - C(3)) / abs((theta(16+5) - C(3))) );
    
w(1) = .125*(1- (X(1) - C(1)) / abs((theta(1) - C(1))) )*...
        (1- (X(2) - C(2)) / abs((theta(8+1) - C(2))) )*...
        (1- (X(3) - C(3)) / abs((theta(16+1) - C(3))) );
    
w(4) = .125*(1+ (X(1) - C(1)) / abs((theta(4) - C(1))) )*...
        (1- (X(2) - C(2)) / abs((theta(8+4) - C(2))) )*...
        (1 - (X(3) - C(3)) / abs((theta(16+4) - C(3))) );
    
w(7) = .125*(1+ (X(1) - C(1)) / abs((theta(7) - C(1))) )*...
        (1+ (X(2) - C(2)) / abs((theta(8+7) - C(2))) )*...
        (1+ (X(3) - C(3)) / abs((theta(16+7) - C(3))) );
    
w(6) = .125*(1- (X(1) - C(1)) / abs((theta(6) - C(1))) )*...
        (1+ (X(2) - C(2)) / abs((theta(8+6) - C(2))) )*...
        (1+ (X(3) - C(3)) / abs((theta(16+6) - C(3))) );
    
w(2) = .125*(1- (X(1) - C(1)) / abs((theta(2) - C(1))) )*...
        (1+ (X(2) - C(2)) / abs((theta(8+2) - C(2))) )*...
        (1- (X(3) - C(3)) / abs((theta(16+2) - C(3))) );
    
w(3) = .125*(1+ (X(1) - C(1)) / abs((theta(3) - C(1))) )*...
        (1+ (X(2) - C(2)) / abs((theta(8+3) - C(2))) )*...
        (1- (X(3) - C(3)) / abs((theta(16+3) - C(3))) );
    
w(8) = .125*(1+ (X(1) - C(1)) / abs((theta(8) - C(1))) )*...
        (1- (X(2) - C(2)) / abs((theta(8+8) - C(2))) )*...
        (1+ (X(3) - C(3)) / abs((theta(16+8) - C(3))) );
    
end

